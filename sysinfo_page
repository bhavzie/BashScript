#!/bin/bash
#html file to show system information
#Constants
TITLE="System Information HTML File -> "
DATE=$(date +"%x %r %Z")
RIGHT_NOW="SYSTEM INFORMATION ON $DATE done by $HOSTNAME"
filename=~/sysinfo_page.html
interact=
response=
show_systeminfo()							
{
echo "<h2>System information : </h2>"
echo "<p>"
    # Find any release files in /etc

    if ls /etc/*release 1>/dev/null 2>&1; then
        echo "<h2>System release info</h2>"
        echo "<pre>"
        for i in /etc/*release; do

            # Since we can't be sure of the
            # length of the file, only
            # display the first line.

            head -n 1 $i
        done
        uname -orp
        echo "</pre>"
    fi

echo "</p>"
}
show_uptime()
{
echo "<h3> Uptime of the system : </h3>"
echo "<pre>"
echo "$(uptime)"
echo "</pre>"
}
show_disk()
{
echo "<h4> Disk usage is : </h4>"
echo "<pre>"
df
echo "</pre>"
}
show_homespace()
{
    echo "<h2>Home directory space by user</h2>"
    echo "<pre>"
    format="%8s%10s%10s   %-s\n"
    printf "$format" "Dirs" "Files" "Blocks" "Directory"
    printf "$format" "----" "-----" "------" "---------"
    if [ $(id -u) = "0" ]; then
        dir_list="/home/*"
    else
        dir_list=$HOME
    fi
    for home_dir in $dir_list; do
        total_dirs=$(find $home_dir -type d | wc -l)
        total_files=$(find $home_dir -type f | wc -l)
        total_blocks=$(du -s $home_dir)
        printf "$format" $total_dirs $total_files $total_blocks
    done
    echo "</pre>"
 # end of home_space
}
show_writeup()
{
cat <<- _EOF_
	<html>
        <head>
        <title>$TITLE</title>
        </head>
        <body>
        <h1>$TITLE</h1>
        <p>$TIME_STAMP</p>
        $(show_systeminfo)
        $(show_uptime)
        $(show_disk)
        $(show_homespace)
        </body>
    </html>
_EOF_
}
usage()
{
echo " usage : ./sysinfo_page [[[ -f file ] -[ i ] | -[ h ] "
}
while [ "$1" != "" ];do
case $1 in 
-f | --file ) shift
	     filename=$1
	     ;;
-i | --interactive ) interact=1
		    ;;
-h | --help ) usage
	      exit 1
	      ;;
* ) usage
    exit 1
esac
shift
done
x=
if [ "$interact" = "1" ]; then
	echo "The default filename is : $filename "
	echo -n "Enter the name of the file you want :"
	read response
	if [ -n "$response" ]; then
	filename=$response
	fi
		if [ -f "$response" ];then
		echo -n "Do you want to overwrite the file (y/n) > "
		read response
		if [ "$response" != "y" ]; then
			echo " Exiting program "
			exit 1
		fi
		fi
fi
show_writeup>$filename
exit 0




